{"version":3,"sources":["Navbar.js","Pages/Homepage.js","Pages/Campus.js","Pages/Student.js","Pages/SpecificStudent.js","Pages/SpecificCampus.js","App.js","index.js"],"names":["Navbar","id","className","to","Homepage","useEffect","console","log","store","getState","Campus","props","history","useNavigate","populateTable","obj","tbody","document","getElementById","firstChild","removeChild","length","text","createElement","innerHTML","appendChild","i","tr","td1","name","addEventListener","style","cursor","td2","img","src","imgUrl","x","data","JSON","stringify","xhr","XMLHttpRequest","open","send","xhttp","tableData","parse","responseText","redux","fetchCampuses","Object","keys","event","preventDefault","inputs","getElementsByTagName","value","alert","addCampus","class","Student","firstName","lastName","fetchStudents","email","college","address","addStudent","SpecificStudent","student","useParams","populateForm","gpa","image","imageUrl","collegeAddress","undefined","CampusId","p","onClick","edit","form","deleteStudent","SpecificCampus","populateSecondTable","campus","xmlhr","http","description","deleteCampus","App","this","prevProps","exact","path","element","Component","connect","state","campuses","students","dispatch","type","require","thunkMiddleware","default","applyMiddleware","rootReducer","combineReducers","action","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e9b4329f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/navbar.css\";\n\nexport default function Navbar() {\n  return (\n    <div id=\"navbar\">\n      <div className=\"separation\">\n        <div className=\"navigation\">\n          <Link to=\"/\" id=\"title\">\n            Platform\n          </Link>\n        </div>\n      </div>\n      <div className=\"separation\">\n        <div className=\"bodyNavigation\">\n          <div id=\"student\">\n            <Link to=\"/students\" className=\"links\">\n              Student\n            </Link>\n          </div>\n        </div>\n        <div className=\"bodyNavigation\">\n          <div id=\"campus\">\n            <Link to=\"/campuses\" className=\"links\">\n              Campus\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Navbar from \"../Navbar\";\nimport { store } from \"../index\";\n\nexport default function Homepage() {\n  useEffect(() => {\n    console.log(store.getState());\n  }, []);\n  return (\n    <div id=\"page\">\n      <Navbar />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/campus.css\";\n\nexport default function Campus(props) {\n  const history = useNavigate();\n  const addCampus = () => {\n    const inputs = document.getElementsByTagName(\"input\");\n    let data = {};\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].value != \"\") {\n        data[inputs[i].id] = inputs[i].value;\n      }\n    }\n    data = JSON.stringify(data);\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/addcampus\");\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/campuses\");\n      xhttp.send();\n      xhttp.addEventListener(\"load\", () => {\n        const tableData = JSON.parse(xhttp.responseText);\n        console.log(tableData);\n        populateTable(tableData);\n      });\n      props.redux.fetchCampuses();\n    });\n  };\n\n  const populateTable = (obj) => {\n    const tbody = document.getElementById(\"tbody\");\n    while (tbody.firstChild) {\n      tbody.removeChild(tbody.firstChild);\n    }\n    if (obj.length === 0) {\n      const text = document.createElement(\"div\");\n      text.innerHTML =\n        \"No campuses currently exist in the database. Please add campus to see campuses.\";\n      tbody.appendChild(text);\n    }\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n      const tr = document.createElement(\"tr\");\n      const td1 = document.createElement(\"td\");\n      td1.innerHTML = obj[i].name;\n      td1.addEventListener(\"click\", () => {\n        history(`/campuses/${obj[i].id}`);\n      });\n      td1.addEventListener(\"mouseover\", () => {\n        td1.style.cursor = \"pointer\";\n      });\n      td1.addEventListener(\"mouseout\", () => {\n        td1.style.cursor = \"auto\";\n      });\n      const td2 = document.createElement(\"td\");\n      const img = document.createElement(\"img\");\n      img.src = obj[i].imgUrl;\n      td2.appendChild(img);\n      const x = document.createElement(\"p\");\n      x.innerHTML = \"X\";\n      x.addEventListener(\"click\", () => {\n        const data = JSON.stringify(obj[i]);\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/removeCampus\");\n        xhr.send(data);\n        xhr.addEventListener(\"load\", () => {\n          const xhttp = new XMLHttpRequest();\n          xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/campuses\");\n          xhttp.send();\n          xhttp.addEventListener(\"load\", () => {\n            const tableData = JSON.parse(xhttp.responseText);\n            console.log(tableData);\n            populateTable(tableData);\n          });\n          props.redux.fetchCampuses();\n        });\n      });\n      tr.appendChild(td1);\n      tr.appendChild(td2);\n      tr.appendChild(x);\n      tbody.appendChild(tr);\n    }\n  };\n\n  useEffect(() => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/campuses\");\n    xhr.send();\n    xhr.addEventListener(\"load\", () => {\n      const tableData = JSON.parse(xhr.responseText);\n      console.log(tableData);\n      populateTable(tableData);\n    });\n    const button = document.getElementById(\"submit\");\n    button.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      const inputs = document.getElementsByTagName(\"input\");\n      for (let i = 0; i < inputs.length; i++) {\n        if (inputs[i].value === \"\") {\n          alert(\"Please complete form data\");\n          return;\n        }\n      }\n      addCampus();\n      const tbody = document.getElementById(\"tbody\");\n      while (tbody.firstChild) {\n        tbody.removeChild(tbody.firstChild);\n      }\n    });\n  }, []);\n  return (\n    <div id=\"page\">\n      <Navbar />\n      <form>\n        <h1>Add Campus</h1>\n        <label class=\"addCampus\">Name:</label>\n        <input id=\"name\"></input>\n        <br></br>\n        <br></br>\n        <label class=\"addCampus\">Address:</label>\n        <input id=\"address\"></input>\n        <br></br>\n        <br></br>\n        <button id=\"submit\">Submit</button>\n        <h1>Campuses</h1>\n        <table>\n          <tbody id=\"tbody\"></tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../Navbar\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Student(props) {\n  const history = useNavigate();\n  const addStudent = () => {\n    const inputs = document.getElementsByTagName(\"input\");\n    let data = {};\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].value != \"\") {\n        data[inputs[i].id] = inputs[i].value;\n      }\n    }\n    console.log(data);\n    data = JSON.stringify(data);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/addstudent\");\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/students\");\n      xhttp.send();\n      xhttp.addEventListener(\"load\", () => {\n        const tableData = JSON.parse(xhttp.responseText);\n        console.log(tableData);\n        populateTable(tableData);\n      });\n      props.redux.fetchStudents();\n      props.redux.fetchCampuses();\n    });\n  };\n\n  const populateTable = (obj) => {\n    const tbody = document.getElementById(\"tbody\");\n    while (tbody.firstChild) {\n      tbody.removeChild(tbody.firstChild);\n    }\n    if (obj.length === 0) {\n      const text = document.createElement(\"div\");\n      text.innerHTML =\n        \"No students currently exist in the database. Please add student to see students.\";\n      tbody.appendChild(text);\n    }\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n      const tr = document.createElement(\"tr\");\n      const td1 = document.createElement(\"td\");\n      td1.innerHTML = obj[i].firstName;\n      const td2 = document.createElement(\"td\");\n      td2.innerHTML = obj[i].lastName;\n      td1.addEventListener(\"click\", () => {\n        history(`/students/${obj[i].id}`);\n      });\n      td1.addEventListener(\"mouseover\", () => {\n        td1.style.cursor = \"pointer\";\n      });\n      td1.addEventListener(\"mouseout\", () => {\n        td1.style.cursor = \"auto\";\n      });\n      td2.addEventListener(\"click\", () => {\n        history(`/students/${obj[i].id}`);\n      });\n      td2.addEventListener(\"mouseover\", () => {\n        td2.style.cursor = \"pointer\";\n      });\n      td2.addEventListener(\"mouseout\", () => {\n        td2.style.cursor = \"auto\";\n      });\n      const x = document.createElement(\"p\");\n      x.innerHTML = \"X\";\n      x.addEventListener(\"click\", () => {\n        const data = JSON.stringify(obj[i]);\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/removeStudent\");\n        xhr.send(data);\n        xhr.addEventListener(\"load\", () => {\n          const xhttp = new XMLHttpRequest();\n          xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/students\");\n          xhttp.send();\n          xhttp.addEventListener(\"load\", () => {\n            const tableData = JSON.parse(xhttp.responseText);\n            console.log(tableData);\n            populateTable(tableData);\n          });\n          props.redux.fetchStudents();\n        });\n      });\n      tr.appendChild(td1);\n      tr.appendChild(td2);\n      tr.appendChild(x);\n      tbody.appendChild(tr);\n    }\n  };\n  useEffect(() => {\n    console.log(props);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/students\");\n    xhr.send();\n    xhr.addEventListener(\"load\", () => {\n      const tableData = JSON.parse(xhr.responseText);\n      console.log(tableData);\n      populateTable(tableData);\n    });\n    const button = document.getElementById(\"submit\");\n    button.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      const inputs = document.getElementsByTagName(\"input\");\n      const firstName = document.getElementById(\"firstName\");\n      const lastName = document.getElementById(\"lastName\");\n      const email = document.getElementById(\"email\");\n      if (email.value === \"\" || lastName.value === \"\" || email.value === \"\") {\n        alert(\"Please enter full name and email\");\n        return;\n      }\n      const college = document.getElementById(\"college\");\n      const address = document.getElementById(\"collegeAddress\");\n      console.log(college.value + address.value);\n      if (college?.value != \"\" && address?.value === \"\") {\n        alert(\"Please enter college address\");\n        return;\n      }\n      addStudent();\n      const tbody = document.getElementById(\"tbody\");\n      while (tbody.firstChild) {\n        tbody.removeChild(tbody.firstChild);\n      }\n    });\n  }, []);\n  return (\n    <div id=\"page\">\n      <Navbar />\n      <form>\n        <h1>Add Student</h1>\n        <label>First Name:</label>\n        <input id=\"firstName\"></input>\n        <br></br>\n        <br></br>\n        <label>Last Name:</label>\n        <input id=\"lastName\"></input>\n        <br></br>\n        <br></br>\n        <label>Email:</label>\n        <input id=\"email\"></input>\n        <br></br>\n        <br></br>\n        <label>College:</label>\n        <input id=\"college\"></input>\n        <br></br>\n        <br></br>\n        <label>College Address:</label>\n        <input id=\"collegeAddress\"></input>\n        <br></br>\n        <br></br>\n        <button id=\"submit\">Submit</button>\n        <h1>Students</h1>\n        <table>\n          <tbody id=\"tbody\"></tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Navbar from \"../Navbar.js\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nexport default function SpecificStudent(props) {\n  const history = useNavigate();\n  const { student } = useParams();\n  const populateTable = (obj) => {\n    const tbody = document.getElementById(\"tbody\");\n    while (tbody.firstChild) {\n      tbody.removeChild(tbody.firstChild);\n    }\n    if (obj.length === 0) {\n      const text = document.createElement(\"div\");\n      text.innerHTML =\n        \"No campuses currently exist in the database. Please add campus to see campuses.\";\n      tbody.appendChild(text);\n    }\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n      const tr = document.createElement(\"tr\");\n      const td1 = document.createElement(\"td\");\n      td1.innerHTML = obj[i].name;\n      td1.addEventListener(\"click\", () => {\n        history(`/campuses/${obj[i].id}`);\n      });\n      td1.addEventListener(\"mouseover\", () => {\n        td1.style.cursor = \"pointer\";\n      });\n      td1.addEventListener(\"mouseout\", () => {\n        td1.style.cursor = \"auto\";\n      });\n      const td2 = document.createElement(\"td\");\n      const img = document.createElement(\"img\");\n      img.src = obj[i].imgUrl;\n      td2.appendChild(img);\n      tr.appendChild(td1);\n      tr.appendChild(td2);\n      tbody.appendChild(tr);\n    }\n  };\n  const populateForm = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/getstudent\");\n    xhr.send(student);\n    xhr.addEventListener(\"load\", () => {\n      console.log(xhr.responseText);\n      const data = JSON.parse(xhr.responseText)[0];\n      const firstName = document.getElementById(\"firstName\");\n      const lastName = document.getElementById(\"lastName\");\n      const gpa = document.getElementById(\"gpa\");\n      const image = document.getElementById(\"image\");\n      const email = document.getElementById(\"email\");\n      const college = document.getElementById(\"college\");\n      const address = document.getElementById(\"collegeAddress\");\n      firstName.value = data.firstName;\n      lastName.value = data.lastName;\n      gpa.value = data.gpa;\n      image.value = data.imageUrl;\n      email.value = data.email;\n      college.value = data.college;\n      address.value = data.collegeAddress;\n      const text = document.getElementById(\"enrollment\");\n      if (\n        data.college === null ||\n        data.collegeAddress === null ||\n        data.college === \"\" ||\n        data.collegeAddress === \"\" ||\n        data.college === undefined ||\n        data.collegeAddress === undefined ||\n        data.CampusId === null ||\n        data.CampusId === \"\" ||\n        data.CampusId === undefined\n      ) {\n        text.innerHTML = \"Student is not enrolled at any campus\";\n        const p = document.createElement(\"p\");\n        text.appendChild(p);\n      } else {\n        text.innerHTML = \"\";\n        const xhttp = new XMLHttpRequest();\n        xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/getcampus\");\n        xhttp.send(data.CampusId);\n        xhttp.addEventListener(\"load\", () => {\n          const tableData = JSON.parse(xhttp.responseText);\n          console.log(tableData);\n          populateTable(tableData);\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    console.log(props);\n    populateForm();\n  }, []);\n  const edit = () => {\n    let data = {};\n    const firstName = document.getElementById(\"firstName\");\n    const lastName = document.getElementById(\"lastName\");\n    const gpa = document.getElementById(\"gpa\");\n    const image = document.getElementById(\"image\");\n    const email = document.getElementById(\"email\");\n    const college = document.getElementById(\"college\");\n    const address = document.getElementById(\"collegeAddress\");\n    data.id = student;\n    data.firstName = firstName?.value;\n    data.lastName = lastName?.value;\n    data.gpa = gpa?.value;\n    data.imageUrl = image?.value;\n    data.email = email?.value;\n    data.college = college?.value;\n    data.collegeAddress = address?.value;\n    if (\n      (college.value != \"\" && address.value === \"\") ||\n      (college.value === \"\" && address.value != \"\")\n    ) {\n      alert(\n        \"If editing college information, please enter college name and address\"\n      );\n      return;\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/editstudent\");\n    xhr.send(JSON.stringify(data));\n    xhr.addEventListener(\"load\", () => {\n      populateForm();\n      alert(xhr.responseText);\n      props.redux.fetchCampuses();\n      props.redux.fetchStudents();\n    });\n  };\n\n  const deleteStudent = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/removestudentbyid\");\n    xhr.send(student);\n    xhr.addEventListener(\"load\", () => {\n      const form = document.getElementById(\"form\");\n      while (form.firstChild) {\n        form.removeChild(form.firstChild);\n      }\n      const text = document.createElement(\"div\");\n      text.innerHTML = \"Student deleted\";\n      form.appendChild(text);\n      props.redux.fetchStudents();\n    });\n  };\n\n  return (\n    <div id=\"page\">\n      <Navbar />\n      <form id=\"form\">\n        <h1>Edit Student</h1>\n        <label>First Name:</label>\n        <input id=\"firstName\"></input>\n        <br></br>\n        <br></br>\n        <label>Last Name:</label>\n        <input id=\"lastName\"></input>\n        <br></br>\n        <br></br>\n        <label>Email:</label>\n        <input id=\"email\"></input>\n        <br></br>\n        <br></br>\n        <label>Image Url:</label>\n        <input id=\"image\"></input>\n        <br></br>\n        <br></br>\n        <label>GPA:</label>\n        <input id=\"gpa\"></input>\n        <br></br>\n        <br></br>\n        <label>College:</label>\n        <input id=\"college\"></input>\n        <br></br>\n        <br></br>\n        <label>College Address:</label>\n        <input id=\"collegeAddress\"></input>\n        <br></br>\n        <br></br>\n        <button\n          id=\"edit\"\n          onClick={(event) => {\n            event.preventDefault();\n            edit();\n          }}\n        >\n          Edit\n        </button>\n        <button\n          onClick={(event) => {\n            event.preventDefault();\n            deleteStudent();\n          }}\n        >\n          Delete Student\n        </button>\n        <h1>Enrollment</h1>\n        <div id=\"enrollment\"></div>\n        <table>\n          <tbody id=\"tbody\"></tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Navbar from \"../Navbar.js\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nexport default function SpecificCampus(props) {\n  const history = useNavigate();\n  const populateSecondTable = (obj) => {\n    const tbody = document.getElementById(\"tbody2\");\n    while (tbody.firstChild) {\n      tbody.removeChild(tbody.firstChild);\n    }\n    if (obj.length === 0) {\n      const text = document.createElement(\"div\");\n      text.innerHTML = \"No students currently unaffiliated with this campus\";\n      tbody.appendChild(text);\n    }\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n      const tr = document.createElement(\"tr\");\n      const td1 = document.createElement(\"td\");\n      td1.innerHTML = obj[i].firstName;\n      const td2 = document.createElement(\"td\");\n      td2.innerHTML = obj[i].lastName;\n      td1.addEventListener(\"click\", () => {\n        history(`/students/${obj[i].id}`);\n      });\n      td1.addEventListener(\"mouseover\", () => {\n        td1.style.cursor = \"pointer\";\n      });\n      td1.addEventListener(\"mouseout\", () => {\n        td1.style.cursor = \"auto\";\n      });\n      td2.addEventListener(\"click\", () => {\n        history(`/students/${obj[i].id}`);\n      });\n      td2.addEventListener(\"mouseover\", () => {\n        td2.style.cursor = \"pointer\";\n      });\n      td2.addEventListener(\"mouseout\", () => {\n        td2.style.cursor = \"auto\";\n      });\n      const x = document.createElement(\"b\");\n      x.innerHTML = \"+\";\n      x.addEventListener(\"click\", () => {\n        obj[i].CampusId = campus;\n        const data = JSON.stringify(obj[i]);\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/enrollStudent\");\n        xhr.send(data);\n        xhr.addEventListener(\"load\", () => {\n          const xhttp = new XMLHttpRequest();\n          xhttp.open(\n            \"POST\",\n            \"https://campusbackend.herokuapp.com/unaffiliatedstudents\"\n          );\n          xhttp.send(campus);\n          xhttp.addEventListener(\"load\", () => {\n            const tableData = JSON.parse(xhttp.responseText);\n            console.log(tableData);\n            populateSecondTable(tableData);\n            const xmlhr = new XMLHttpRequest();\n            xmlhr.open(\n              \"POST\",\n              \"https://campusbackend.herokuapp.com/enrolledstudents\"\n            );\n            xmlhr.send(campus);\n            xmlhr.addEventListener(\"load\", () => {\n              const tableData = JSON.parse(xmlhr.responseText);\n              console.log(tableData);\n              populateTable(tableData);\n              props.redux.fetchStudents();\n            });\n          });\n        });\n      });\n      tr.appendChild(td1);\n      tr.appendChild(td2);\n      tr.appendChild(x);\n      tbody.appendChild(tr);\n    }\n  };\n  const populateTable = (obj) => {\n    const tbody = document.getElementById(\"tbody\");\n    while (tbody.firstChild) {\n      tbody.removeChild(tbody.firstChild);\n    }\n    if (obj.length === 0) {\n      const text = document.createElement(\"div\");\n      text.innerHTML = \"No students currently enrolled on this campus\";\n      tbody.appendChild(text);\n    }\n    for (let i = 0; i < Object.keys(obj).length; i++) {\n      const tr = document.createElement(\"tr\");\n      const td1 = document.createElement(\"td\");\n      td1.innerHTML = obj[i].firstName;\n      const td2 = document.createElement(\"td\");\n      td2.innerHTML = obj[i].lastName;\n      td1.addEventListener(\"click\", () => {\n        history(`/students/${obj[i].id}`);\n      });\n      td1.addEventListener(\"mouseover\", () => {\n        td1.style.cursor = \"pointer\";\n      });\n      td1.addEventListener(\"mouseout\", () => {\n        td1.style.cursor = \"auto\";\n      });\n      td2.addEventListener(\"click\", () => {\n        history(`/students/${obj[i].id}`);\n      });\n      td2.addEventListener(\"mouseover\", () => {\n        td2.style.cursor = \"pointer\";\n      });\n      td2.addEventListener(\"mouseout\", () => {\n        td2.style.cursor = \"auto\";\n      });\n      const x = document.createElement(\"p\");\n      x.innerHTML = \"X\";\n      x.addEventListener(\"click\", () => {\n        const data = JSON.stringify(obj[i]);\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/unenrollStudent\");\n        xhr.send(data);\n        xhr.addEventListener(\"load\", () => {\n          const xhttp = new XMLHttpRequest();\n          xhttp.open(\n            \"POST\",\n            \"https://campusbackend.herokuapp.com/enrolledstudents\"\n          );\n          xhttp.send(campus);\n          xhttp.addEventListener(\"load\", () => {\n            const tableData = JSON.parse(xhttp.responseText);\n            console.log(tableData);\n            populateTable(tableData);\n          });\n          const http = new XMLHttpRequest();\n          http.open(\n            \"POST\",\n            \"https://campusbackend.herokuapp.com/unaffiliatedstudents\"\n          );\n          http.send(campus);\n          http.addEventListener(\"load\", () => {\n            const tableData = JSON.parse(http.responseText);\n            console.log(tableData);\n            populateSecondTable(tableData);\n            props.redux.fetchStudents();\n          });\n        });\n      });\n      tr.appendChild(td1);\n      tr.appendChild(td2);\n      tr.appendChild(x);\n      tbody.appendChild(tr);\n    }\n  };\n  const { campus } = useParams();\n  const deleteCampus = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/removecampusbyid\");\n    xhr.send(campus);\n    xhr.addEventListener(\"load\", () => {\n      const inputs = document.getElementsByTagName(\"input\");\n      for (let i = 0; i < inputs.length; i++) {\n        inputs[i].value = \"\";\n      }\n      const form = document.getElementsByTagName(\"form\")[0];\n      while (form.firstChild) {\n        form.removeChild(form.firstChild);\n      }\n      const text = document.createElement(\"div\");\n      text.innerHTML = \"Campus deleted\";\n      form.appendChild(text);\n      props.redux.fetchCampuses();\n    });\n  };\n  useEffect(() => {\n    console.log(props);\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/getcampus\");\n    xhr.send(campus);\n    xhr.addEventListener(\"load\", () => {\n      console.log(xhr.responseText);\n      const data = JSON.parse(xhr.responseText)[0];\n      console.log(data);\n      const name = document.getElementById(\"name\");\n      const address = document.getElementById(\"address\");\n      const image = document.getElementById(\"image\");\n      const description = document.getElementById(\"description\");\n      name.value = data?.name;\n      address.value = data?.address;\n      image.value = data?.imgUrl;\n      description.value = data?.description;\n    });\n\n    const xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/enrolledstudents\");\n    xhttp.send(campus);\n    xhttp.addEventListener(\"load\", () => {\n      const tableData = JSON.parse(xhttp.responseText);\n      console.log(tableData);\n      populateTable(tableData);\n    });\n\n    const http = new XMLHttpRequest();\n    http.open(\n      \"POST\",\n      \"https://campusbackend.herokuapp.com/unaffiliatedstudents\"\n    );\n    http.send(campus);\n    http.addEventListener(\"load\", () => {\n      const tableData = JSON.parse(http.responseText);\n      console.log(tableData);\n      populateSecondTable(tableData);\n    });\n  }, []);\n  const edit = () => {\n    let data = {};\n    const name = document.getElementById(\"name\");\n    const address = document.getElementById(\"address\");\n    const image = document.getElementById(\"image\");\n    const description = document.getElementById(\"description\");\n    data.id = campus;\n    data.name = name?.value;\n    data.address = address?.value;\n    data.description = description?.value;\n    data.imgUrl = image?.value;\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://campusbackend.herokuapp.com/editcampus\");\n    xhr.send(JSON.stringify(data));\n    xhr.addEventListener(\"load\", () => {\n      alert(xhr.responseText);\n      props.redux.fetchCampuses();\n    });\n  };\n  return (\n    <div id=\"page\">\n      <Navbar />\n      <form>\n        <h1>Enrolled Students</h1>\n        <table>\n          <tbody id=\"tbody\"></tbody>\n        </table>\n        <h1>Unaffiliated Students</h1>\n        <table>\n          <tbody id=\"tbody2\"></tbody>\n        </table>\n        <h1>Edit College</h1>\n        <label class=\"campus\">Name:</label>\n        <input id=\"name\"></input>\n        <br></br>\n        <br></br>\n        <label class=\"campus\">Address:</label>\n        <input id=\"address\"></input>\n        <br></br>\n        <br></br>\n        <label class=\"campus\">Image Url:</label>\n        <input id=\"image\"></input>\n        <br></br>\n        <br></br>\n        <label class=\"campus\">Description:</label>\n        <input id=\"description\"></input>\n        <br></br>\n        <br></br>\n        <button\n          id=\"edit\"\n          onClick={(event) => {\n            event.preventDefault();\n            edit();\n          }}\n        >\n          Edit\n        </button>\n        <button\n          id=\"deleteCampus\"\n          onClick={(event) => {\n            event.preventDefault();\n            deleteCampus();\n          }}\n        >\n          Delete Campus\n        </button>\n      </form>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport Campus from \"./Pages/Campus\";\nimport Student from \"./Pages/Student\";\nimport SpecificStudent from \"./Pages/SpecificStudent\";\nimport SpecificCampus from \"./Pages/SpecificCampus\";\nimport {\n  HashRouter as Router,\n  Route,\n  Routes as Switch,\n} from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchStudents();\n    this.props.fetchCampuses();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      console.log(this.props);\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" element={<Homepage />} />\n        </Switch>\n        <Switch>\n          <Route\n            exact\n            path=\"/campuses\"\n            element={<Campus redux={this.props} />}\n          />\n        </Switch>\n        <Switch>\n          <Route\n            exact\n            path=\"/students\"\n            element={<Student redux={this.props} />}\n          />\n        </Switch>\n        <Switch>\n          <Route\n            exact\n            path=\"/students/:student\"\n            element={<SpecificStudent redux={this.props} />}\n          />\n        </Switch>\n        <Switch>\n          <Route\n            exact\n            path=\"/campuses/:campus\"\n            element={<SpecificCampus redux={this.props} />}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nfunction fetchStudents() {\n  return (dispatch) => {\n    dispatch({ type: \"START_ADDING_STUDENTS_REQUEST\" });\n    const xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/students\");\n    xhttp.send();\n    xhttp.addEventListener(\"load\", () => {\n      const students = JSON.parse(xhttp.responseText);\n      dispatch({ type: \"ADD_STUDENTS\", students });\n    });\n  };\n}\n\nfunction fetchCampuses() {\n  return (dispatch) => {\n    dispatch({ type: \"START_ADDING_CAMPUSES_REQUEST\" });\n    const xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/campuses\");\n    xhttp.send();\n    xhttp.addEventListener(\"load\", () => {\n      const campuses = JSON.parse(xhttp.responseText);\n      dispatch({ type: \"ADD_CAMPUSES\", campuses });\n    });\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: () => dispatch(fetchStudents()),\n    fetchCampuses: () => dispatch(fetchCampuses()),\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    campuses: state.campuses,\n    students: state.students,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\n\nconst redux = require(\"redux\");\nconst thunkMiddleware = require(\"redux-thunk\").default;\nconst applyMiddleware = redux.applyMiddleware;\n\nfunction fetchStudents() {\n  return (dispatch) => {\n    dispatch({ type: \"START_ADDING_STUDENTS_REQUEST\" });\n    const xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/students\");\n    xhttp.send();\n    xhttp.addEventListener(\"load\", () => {\n      const students = JSON.parse(xhttp.responseText);\n      dispatch({ type: \"ADD_STUDENTS\", students });\n    });\n  };\n}\n\nfunction fetchCampuses() {\n  return (dispatch) => {\n    dispatch({ type: \"START_ADDING_CAMPUSES_REQUEST\" });\n    const xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"https://campusbackend.herokuapp.com/campuses\");\n    xhttp.send();\n    xhttp.addEventListener(\"load\", () => {\n      const campuses = JSON.parse(xhttp.responseText);\n      dispatch({ type: \"ADD_CAMPUSES\", campuses });\n    });\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: () => dispatch(fetchStudents()),\n    fetchCampuses: () => dispatch(fetchCampuses()),\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    campuses: state.campuses,\n  };\n}\n\nconnect(mapStateToProps, mapDispatchToProps)(App);\n\nfunction studentsReducer(\n  state = {\n    students: [],\n  },\n  action\n) {\n  switch (action.type) {\n    case \"ADD_STUDENTS\":\n      return { ...state, students: action.students };\n\n    default:\n      return state;\n  }\n}\n\nfunction campusesReducer(\n  state = {\n    campuses: [],\n  },\n  action\n) {\n  switch (action.type) {\n    case \"ADD_CAMPUSES\":\n      return { ...state, campuses: action.campuses };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = redux.combineReducers({\n  students: studentsReducer,\n  campuses: campusesReducer,\n});\n\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}